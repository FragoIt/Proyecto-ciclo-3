CREATE TYPE Enum_RoleName AS ENUM ('Admin', 'Operario');

create table employee (
  employee_id bigint generated by default as identity primary key,
  employee_email character varying(15),
  profile_id bigint,
  employee_role Enum_RoleName,
  enterprise_id bigint,
  transaction_id bigint,
  employee_createAt timestamp with time zone default timezone('utc'::text, now()) not null,
  employee_updateAt timestamp with time zone default timezone('utc'::text, now()) not null,
  UNIQUE (employee_email)
);

CREATE TABLE IF NOT EXISTS enterprise
(
    enterprise_id bigint generated by default as identity primary key,
    enterprise_name character varying(50),
    enterprise_document character varying(10),
    enterprise_phone character varying(10),
    enterprise_address character varying(30),
    "enterprise_createAt" timestamp with time zone default timezone('utc'::text, now()) not null,
    "enterprise_updatedAt" timestamp with time zone default timezone('utc'::text, now()) not null,
    CONSTRAINT enterprise_02_unk UNIQUE (enterprise_name),
    CONSTRAINT enterprise_03_unk UNIQUE (enterprise_document)
);

CREATE TABLE IF NOT EXISTS profile
(
    profile_id bigint generated by default as identity primary key,
    profile_image bytea,
    profile_phone character varying(10),
    "profile_createAt" timestamp with time zone default timezone('utc'::text, now()) not null,
    "profile_updatedAt" timestamp with time zone default timezone('utc'::text, now()) not null
);

CREATE TABLE IF NOT EXISTS transaction
(
    transaction_id bigint generated by default as identity primary key,
    transaction_concept character varying(15),
    transaction_amount numeric,
    employee_id bigint,
    "transaction_createAt" timestamp with time zone default timezone('utc'::text, now()) not null,
    "transaction_updatedAt" timestamp with time zone default timezone('utc'::text, now()) not null,
    enterprise_id bigint
	);
	
ALTER TABLE IF EXISTS employee
    ADD FOREIGN KEY (profile_id)
    REFERENCES public.profile (profile_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS transaction
    ADD FOREIGN KEY (enterprise_id)
    REFERENCES public.enterprise (enterprise_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;	

ALTER TABLE IF EXISTS transaction
    ADD FOREIGN KEY (employee_id)
    REFERENCES employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;